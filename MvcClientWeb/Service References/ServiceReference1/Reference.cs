//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MvcClientWeb.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EmployeeDetails", Namespace="http://schemas.datacontract.org/2004/07/WcfExample")]
    [System.SerializableAttribute()]
    public partial class EmployeeDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SalaryField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Salary {
            get {
                return this.SalaryField;
            }
            set {
                if ((this.SalaryField.Equals(value) != true)) {
                    this.SalaryField = value;
                    this.RaisePropertyChanged("Salary");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IMisServicios")]
    public interface IMisServicios {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMisServicios/GetEmployeeDetails", ReplyAction="http://tempuri.org/IMisServicios/GetEmployeeDetailsResponse")]
        MvcClientWeb.ServiceReference1.EmployeeDetails[] GetEmployeeDetails(string EmployeeName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMisServicios/GetEmployeeDetails", ReplyAction="http://tempuri.org/IMisServicios/GetEmployeeDetailsResponse")]
        System.Threading.Tasks.Task<MvcClientWeb.ServiceReference1.EmployeeDetails[]> GetEmployeeDetailsAsync(string EmployeeName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMisServicios/InsertEmployeeDetails", ReplyAction="http://tempuri.org/IMisServicios/InsertEmployeeDetailsResponse")]
        string InsertEmployeeDetails(MvcClientWeb.ServiceReference1.EmployeeDetails EmployeeInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMisServicios/InsertEmployeeDetails", ReplyAction="http://tempuri.org/IMisServicios/InsertEmployeeDetailsResponse")]
        System.Threading.Tasks.Task<string> InsertEmployeeDetailsAsync(MvcClientWeb.ServiceReference1.EmployeeDetails EmployeeInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMisServicios/GetAllEmployee", ReplyAction="http://tempuri.org/IMisServicios/GetAllEmployeeResponse")]
        MvcClientWeb.ServiceReference1.EmployeeDetails[] GetAllEmployee();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMisServicios/GetAllEmployee", ReplyAction="http://tempuri.org/IMisServicios/GetAllEmployeeResponse")]
        System.Threading.Tasks.Task<MvcClientWeb.ServiceReference1.EmployeeDetails[]> GetAllEmployeeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMisServicios/UpdateEmployee", ReplyAction="http://tempuri.org/IMisServicios/UpdateEmployeeResponse")]
        bool UpdateEmployee(MvcClientWeb.ServiceReference1.EmployeeDetails EmployeeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMisServicios/UpdateEmployee", ReplyAction="http://tempuri.org/IMisServicios/UpdateEmployeeResponse")]
        System.Threading.Tasks.Task<bool> UpdateEmployeeAsync(MvcClientWeb.ServiceReference1.EmployeeDetails EmployeeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMisServicios/DeleteEmployee", ReplyAction="http://tempuri.org/IMisServicios/DeleteEmployeeResponse")]
        bool DeleteEmployee(int EmployeeInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMisServicios/DeleteEmployee", ReplyAction="http://tempuri.org/IMisServicios/DeleteEmployeeResponse")]
        System.Threading.Tasks.Task<bool> DeleteEmployeeAsync(int EmployeeInfo);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMisServiciosChannel : MvcClientWeb.ServiceReference1.IMisServicios, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MisServiciosClient : System.ServiceModel.ClientBase<MvcClientWeb.ServiceReference1.IMisServicios>, MvcClientWeb.ServiceReference1.IMisServicios {
        
        public MisServiciosClient() {
        }
        
        public MisServiciosClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MisServiciosClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MisServiciosClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MisServiciosClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public MvcClientWeb.ServiceReference1.EmployeeDetails[] GetEmployeeDetails(string EmployeeName) {
            return base.Channel.GetEmployeeDetails(EmployeeName);
        }
        
        public System.Threading.Tasks.Task<MvcClientWeb.ServiceReference1.EmployeeDetails[]> GetEmployeeDetailsAsync(string EmployeeName) {
            return base.Channel.GetEmployeeDetailsAsync(EmployeeName);
        }
        
        public string InsertEmployeeDetails(MvcClientWeb.ServiceReference1.EmployeeDetails EmployeeInfo) {
            return base.Channel.InsertEmployeeDetails(EmployeeInfo);
        }
        
        public System.Threading.Tasks.Task<string> InsertEmployeeDetailsAsync(MvcClientWeb.ServiceReference1.EmployeeDetails EmployeeInfo) {
            return base.Channel.InsertEmployeeDetailsAsync(EmployeeInfo);
        }
        
        public MvcClientWeb.ServiceReference1.EmployeeDetails[] GetAllEmployee() {
            return base.Channel.GetAllEmployee();
        }
        
        public System.Threading.Tasks.Task<MvcClientWeb.ServiceReference1.EmployeeDetails[]> GetAllEmployeeAsync() {
            return base.Channel.GetAllEmployeeAsync();
        }
        
        public bool UpdateEmployee(MvcClientWeb.ServiceReference1.EmployeeDetails EmployeeID) {
            return base.Channel.UpdateEmployee(EmployeeID);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateEmployeeAsync(MvcClientWeb.ServiceReference1.EmployeeDetails EmployeeID) {
            return base.Channel.UpdateEmployeeAsync(EmployeeID);
        }
        
        public bool DeleteEmployee(int EmployeeInfo) {
            return base.Channel.DeleteEmployee(EmployeeInfo);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteEmployeeAsync(int EmployeeInfo) {
            return base.Channel.DeleteEmployeeAsync(EmployeeInfo);
        }
    }
}
